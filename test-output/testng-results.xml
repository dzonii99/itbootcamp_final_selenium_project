<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="15442" started-at="2022-10-12T02:32:30 CEST" finished-at="2022-10-12T02:32:45 CEST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="15442" started-at="2022-10-12T02:32:30 CEST" finished-at="2022-10-12T02:32:45 CEST">
      <class name="tests.SignupTests">
        <test-method status="PASS" signature="setup()[pri:0, instance:tests.SignupTests@cb0ed20]" name="setup" is-config="true" duration-ms="3566" started-at="2022-10-12T02:32:30 CEST" finished-at="2022-10-12T02:32:34 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.SignupTests@cb0ed20]" name="beforeMethod" is-config="true" duration-ms="1575" started-at="2022-10-12T02:32:34 CEST" finished-at="2022-10-12T02:32:35 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="visitsTheSignupPage()[pri:10, instance:tests.SignupTests@cb0ed20]" name="visitsTheSignupPage" duration-ms="164" started-at="2022-10-12T02:32:35 CEST" finished-at="2022-10-12T02:32:35 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- visitsTheSignupPage -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.SignupTests@cb0ed20]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-10-12T02:32:35 CEST" finished-at="2022-10-12T02:32:35 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.SignupTests@cb0ed20]" name="beforeMethod" is-config="true" duration-ms="543" started-at="2022-10-12T02:32:35 CEST" finished-at="2022-10-12T02:32:36 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="checksInputTypes()[pri:20, instance:tests.SignupTests@cb0ed20]" name="checksInputTypes" duration-ms="478" started-at="2022-10-12T02:32:36 CEST" finished-at="2022-10-12T02:32:36 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checksInputTypes -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.SignupTests@cb0ed20]" name="beforeMethod" is-config="true" duration-ms="414" started-at="2022-10-12T02:32:36 CEST" finished-at="2022-10-12T02:32:37 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.SignupTests@cb0ed20]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-10-12T02:32:36 CEST" finished-at="2022-10-12T02:32:36 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="displaysErrorsWhenuserAlreadyExists()[pri:30, instance:tests.SignupTests@cb0ed20]" name="displaysErrorsWhenuserAlreadyExists" duration-ms="1767" started-at="2022-10-12T02:32:37 CEST" finished-at="2022-10-12T02:32:39 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displaysErrorsWhenuserAlreadyExists -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.SignupTests@cb0ed20]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-10-12T02:32:39 CEST" finished-at="2022-10-12T02:32:39 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.SignupTests@cb0ed20]" name="beforeMethod" is-config="true" duration-ms="403" started-at="2022-10-12T02:32:39 CEST" finished-at="2022-10-12T02:32:39 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="signup()[pri:40, instance:tests.SignupTests@cb0ed20]" name="signup" duration-ms="5873" started-at="2022-10-12T02:32:39 CEST" finished-at="2022-10-12T02:32:45 CEST">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to find element with locator By.className: dlgVerifyAccount
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-830CFB9', ip: '192.168.0.107', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_341'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with locator By.className: dlgVerifyAccount
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'DESKTOP-830CFB9', ip: '192.168.0.107', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_341'
Driver info: driver.version: RemoteWebDriver
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:365)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:357)
at pages.MessagePopUpPage.getVerifyMessage(MessagePopUpPage.java:38)
at tests.SignupTests.signup(SignupTests.java:46)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signup -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:tests.SignupTests@cb0ed20]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-10-12T02:32:45 CEST" finished-at="2022-10-12T02:32:45 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:tests.SignupTests@cb0ed20]" name="afterClass" is-config="true" duration-ms="589" started-at="2022-10-12T02:32:45 CEST" finished-at="2022-10-12T02:32:45 CEST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- tests.SignupTests -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
